// Generated by https://quicktype.io
using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace Dota.Core.Models
{


    public partial class DotaTeam
    {
        [JsonProperty("team_id")]
        public long TeamId { get; set; }

        [JsonProperty("rating")]
        public double Rating { get; set; }

        [JsonProperty("wins")]
        public long Wins { get; set; }

        [JsonProperty("losses")]
        public long Losses { get; set; }

        [JsonProperty("last_match_time")]
        public long LastMatchTime { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("tag")]
        public string Tag { get; set; }

        [JsonProperty("logo_url")]
        public Uri LogoUrl { get; set; }

        public static implicit operator DotaTeam(List<DotaTeam> v)
        {
            throw new NotImplementedException();
        }
    }

    public partial class DotaTeam
    {
        public static DotaTeam[] FromJson(string json) => JsonConvert.DeserializeObject<DotaTeam[]>(json, Models.TeamConverter.Settings);
    }

    public static class TeamSerialize
    {
        public static string ToJson(this DotaTeam[] self) => JsonConvert.SerializeObject(self, Models.TeamConverter.Settings);
    }

    internal static class TeamConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
